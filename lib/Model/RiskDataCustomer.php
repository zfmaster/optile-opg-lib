<?php
/**
 * RiskDataCustomer
 *
 * PHP version 5
 *
 * @category Class
 * @package  Optile
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Server Payment API
 *
 * RESTful API for payments via optile Open Payment Gateway (OPG) for server to server communication. Calls to this API require authorization.  ## Current version   * API service version: `1.1.289`   * API model version: `1.20.87`
 *
 * OpenAPI spec version: 1.1.289
 * Contact: support@optile.net
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.8-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Optile\Model;

use \ArrayAccess;
use \Optile\ObjectSerializer;

/**
 * RiskDataCustomer Class Doc Comment
 *
 * @category Class
 * @description Customer risk data.
 * @package  Optile
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class RiskDataCustomer implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'RiskDataCustomer';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'payment_attempts_last_day' => 'int',
        'payment_attempts_last_year' => 'int',
        'card_registration_attempts_last_day' => 'int',
        'purchases_last_six_months' => 'int',
        'suspicious_activity' => 'bool',
        'account' => '\Optile\Model\CustomerAccount'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'payment_attempts_last_day' => null,
        'payment_attempts_last_year' => null,
        'card_registration_attempts_last_day' => null,
        'purchases_last_six_months' => null,
        'suspicious_activity' => null,
        'account' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'payment_attempts_last_day' => 'paymentAttemptsLastDay',
        'payment_attempts_last_year' => 'paymentAttemptsLastYear',
        'card_registration_attempts_last_day' => 'cardRegistrationAttemptsLastDay',
        'purchases_last_six_months' => 'purchasesLastSixMonths',
        'suspicious_activity' => 'suspiciousActivity',
        'account' => 'account'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'payment_attempts_last_day' => 'setPaymentAttemptsLastDay',
        'payment_attempts_last_year' => 'setPaymentAttemptsLastYear',
        'card_registration_attempts_last_day' => 'setCardRegistrationAttemptsLastDay',
        'purchases_last_six_months' => 'setPurchasesLastSixMonths',
        'suspicious_activity' => 'setSuspiciousActivity',
        'account' => 'setAccount'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'payment_attempts_last_day' => 'getPaymentAttemptsLastDay',
        'payment_attempts_last_year' => 'getPaymentAttemptsLastYear',
        'card_registration_attempts_last_day' => 'getCardRegistrationAttemptsLastDay',
        'purchases_last_six_months' => 'getPurchasesLastSixMonths',
        'suspicious_activity' => 'getSuspiciousActivity',
        'account' => 'getAccount'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['payment_attempts_last_day'] = isset($data['payment_attempts_last_day']) ? $data['payment_attempts_last_day'] : null;
        $this->container['payment_attempts_last_year'] = isset($data['payment_attempts_last_year']) ? $data['payment_attempts_last_year'] : null;
        $this->container['card_registration_attempts_last_day'] = isset($data['card_registration_attempts_last_day']) ? $data['card_registration_attempts_last_day'] : null;
        $this->container['purchases_last_six_months'] = isset($data['purchases_last_six_months']) ? $data['purchases_last_six_months'] : null;
        $this->container['suspicious_activity'] = isset($data['suspicious_activity']) ? $data['suspicious_activity'] : null;
        $this->container['account'] = isset($data['account']) ? $data['account'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets payment_attempts_last_day
     *
     * @return int
     */
    public function getPaymentAttemptsLastDay()
    {
        return $this->container['payment_attempts_last_day'];
    }

    /**
     * Sets payment_attempts_last_day
     *
     * @param int $payment_attempts_last_day Number of transactions (successful and abandoned) for this customer account with the merchant across all payment accounts in the previous 24 hours.
     *
     * @return $this
     */
    public function setPaymentAttemptsLastDay($payment_attempts_last_day)
    {
        $this->container['payment_attempts_last_day'] = $payment_attempts_last_day;

        return $this;
    }

    /**
     * Gets payment_attempts_last_year
     *
     * @return int
     */
    public function getPaymentAttemptsLastYear()
    {
        return $this->container['payment_attempts_last_year'];
    }

    /**
     * Sets payment_attempts_last_year
     *
     * @param int $payment_attempts_last_year Number of transactions (successful and abandoned) for this customer account with the merchant across all payment accounts in the previous year.
     *
     * @return $this
     */
    public function setPaymentAttemptsLastYear($payment_attempts_last_year)
    {
        $this->container['payment_attempts_last_year'] = $payment_attempts_last_year;

        return $this;
    }

    /**
     * Gets card_registration_attempts_last_day
     *
     * @return int
     */
    public function getCardRegistrationAttemptsLastDay()
    {
        return $this->container['card_registration_attempts_last_day'];
    }

    /**
     * Sets card_registration_attempts_last_day
     *
     * @param int $card_registration_attempts_last_day Number of Add Card attempts in the last 24 hours.
     *
     * @return $this
     */
    public function setCardRegistrationAttemptsLastDay($card_registration_attempts_last_day)
    {
        $this->container['card_registration_attempts_last_day'] = $card_registration_attempts_last_day;

        return $this;
    }

    /**
     * Gets purchases_last_six_months
     *
     * @return int
     */
    public function getPurchasesLastSixMonths()
    {
        return $this->container['purchases_last_six_months'];
    }

    /**
     * Sets purchases_last_six_months
     *
     * @param int $purchases_last_six_months Number of purchases with this customer account during the previous six months.
     *
     * @return $this
     */
    public function setPurchasesLastSixMonths($purchases_last_six_months)
    {
        $this->container['purchases_last_six_months'] = $purchases_last_six_months;

        return $this;
    }

    /**
     * Gets suspicious_activity
     *
     * @return bool
     */
    public function getSuspiciousActivity()
    {
        return $this->container['suspicious_activity'];
    }

    /**
     * Sets suspicious_activity
     *
     * @param bool $suspicious_activity Indicates if the merchant knows of suspicious activities by the consumer (e.g. previous fraud).
     *
     * @return $this
     */
    public function setSuspiciousActivity($suspicious_activity)
    {
        $this->container['suspicious_activity'] = $suspicious_activity;

        return $this;
    }

    /**
     * Gets account
     *
     * @return \Optile\Model\CustomerAccount
     */
    public function getAccount()
    {
        return $this->container['account'];
    }

    /**
     * Sets account
     *
     * @param \Optile\Model\CustomerAccount $account account
     *
     * @return $this
     */
    public function setAccount($account)
    {
        $this->container['account'] = $account;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


